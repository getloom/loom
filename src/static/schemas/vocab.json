{
	"$id": "https://app.felt.dev/schemas/vocab.json",
	"$schema": "https://json-schema.org/draft/2020-12/schema",
	"title": "@feltjs/felt-server vocab",
	"$defs": {
		"Account": {
			"$id": "/schemas/Account",
			"type": "object",
			"description": "\n\t\tRepresents the point of entry to the system and is responsible for managing authentication to the system. \n\t\tIt holds top level user data and is the relation through which all other data is loaded for the client.\n\t",
			"properties": {
				"account_id": {"$ref": "/schemas/AccountId"},
				"name": {"type": "string"},
				"password": {"type": "string"},
				"settings": {"$ref": "/schemas/AccountSettings"},
				"created": {"type": "object", "instanceof": "Date"},
				"updated": {"anyOf": [{"type": "object", "instanceof": "Date"}, {"type": "null"}]}
			},
			"required": ["account_id", "name", "settings", "password", "created", "updated"],
			"additionalProperties": false
		},
		"AccountActor": {
			"$id": "/schemas/AccountActor",
			"type": "object",
			"description": "\n\t\tRepresents a human actor logged in via an Account. They are owned and managed from the account level.\n\t\tWhen an AccountActor is created, a personal Hub is also created for it and associated via 'hub_id'.\n\t\tA reference to this personal Hub is stored in 'hub_id'.\n\t",
			"properties": {
				"actor_id": {
					"$ref": "/schemas/ActorId",
					"tsType": "ActorId",
					"tsImport": "import type {ActorId} from '$lib/vocab/actor/actor';"
				},
				"account_id": {
					"$ref": "/schemas/AccountId",
					"tsType": "AccountId",
					"tsImport": "import type {AccountId} from '$lib/vocab/account/account';"
				},
				"hub_id": {
					"$ref": "/schemas/HubId",
					"tsType": "HubId",
					"tsImport": "import type {HubId} from '$lib/vocab/hub/hub';"
				},
				"type": {"type": "string", "enum": ["account"]},
				"name": {"type": "string"},
				"icon": {"type": "string"},
				"created": {"type": "object", "instanceof": "Date", "tsType": "Date"},
				"updated": {
					"anyOf": [{"type": "object", "instanceof": "Date", "tsType": "Date"}, {"type": "null"}]
				}
			},
			"required": ["actor_id", "account_id", "hub_id", "type", "name", "created", "updated"],
			"additionalProperties": false
		},
		"AccountId": {
			"$id": "/schemas/AccountId",
			"type": "number",
			"tsType": "Flavored<number, 'AccountId'>",
			"tsImport": "import {Flavored} from '@feltjs/util';"
		},
		"AccountSettings": {
			"$id": "/schemas/AccountSettings",
			"type": "object",
			"description": "\n\t\tA nested set of attributes on Account & ClientAccount. Holds all account level settings.\n\t",
			"properties": {"darkmode": {"type": "boolean"}},
			"required": [],
			"additionalProperties": false
		},
		"Actor": {
			"$id": "/schemas/Actor",
			"description": "\n\t Actors perform actions in the system. They can be of type Account, Hub, or Ghost.\n\t",
			"anyOf": [
				{"$ref": "/schemas/AccountActor"},
				{"$ref": "/schemas/CommunityActor"},
				{"$ref": "/schemas/GhostActor"}
			]
		},
		"ActorId": {
			"$id": "/schemas/ActorId",
			"type": "number",
			"tsType": "Flavored<number, 'ActorId'>",
			"tsImport": "import {Flavored} from '@feltjs/util';"
		},
		"Assignment": {
			"$id": "/schemas/Assignment",
			"type": "object",
			"description": "\n\t Describes the relationship between an Actor and Role within a given Hub.\n\t An Actor must have at least 1 Assignment to be in a Hub and see it in the nav.\n\t When initially joining a Hub, Actors are given an Assignment to the default Role.\n\t",
			"properties": {
				"assignment_id": {"$ref": "/schemas/AssignmentId"},
				"actor_id": {"$ref": "/schemas/ActorId"},
				"hub_id": {"$ref": "/schemas/HubId"},
				"role_id": {"$ref": "/schemas/RoleId"},
				"created": {"type": "object", "instanceof": "Date"}
			},
			"required": ["assignment_id", "actor_id", "hub_id", "role_id", "created"],
			"additionalProperties": false
		},
		"AssignmentId": {
			"$id": "/schemas/AssignmentId",
			"type": "number",
			"tsType": "Flavored<number, 'AssignmentId'>",
			"tsImport": "import {Flavored} from '@feltjs/util';"
		},
		"ClearFreshnessParams": {
			"$id": "/schemas/ClearFreshnessParams",
			"type": "object",
			"properties": {"directory_id": {"$ref": "/schemas/EntityId"}},
			"required": ["directory_id"],
			"additionalProperties": false
		},
		"ClientAccount": {
			"$id": "/schemas/ClientAccount",
			"type": "object",
			"description": "\n\t\tA client-facing subset of an Account. Excludes 'password' for security.\n\t",
			"properties": {
				"account_id": {"$ref": "/schemas/AccountId"},
				"name": {"type": "string"},
				"settings": {"$ref": "/schemas/AccountSettings"},
				"created": {"type": "object", "instanceof": "Date"},
				"updated": {"anyOf": [{"type": "object", "instanceof": "Date"}, {"type": "null"}]}
			},
			"required": ["account_id", "name", "settings", "created", "updated"],
			"additionalProperties": false
		},
		"ClientAccountSession": {
			"$id": "/schemas/ClientAccountSession",
			"type": "object",
			"description": "\n\t\tThe session data loaded on each page for authenticated users.\n\t",
			"properties": {
				"account": {"$ref": "/schemas/ClientAccount"},
				"sessionActors": {"type": "array", "items": {"$ref": "/schemas/AccountActor"}},
				"hubs": {"type": "array", "items": {"$ref": "/schemas/Hub"}},
				"roles": {"type": "array", "items": {"$ref": "/schemas/Role"}},
				"spaces": {"type": "array", "items": {"$ref": "/schemas/Space"}},
				"directories": {
					"type": "array",
					"items": {"$ref": "/schemas/Entity"},
					"tsType": "Array<Entity & {data: EntityData}>",
					"tsImport": "import type {EntityData} from '$lib/vocab/entity/entityData'"
				},
				"assignments": {"type": "array", "items": {"$ref": "/schemas/Assignment"}},
				"policies": {"type": "array", "items": {"$ref": "/schemas/Policy"}},
				"actors": {"type": "array", "items": {"$ref": "/schemas/ClientActor"}},
				"guest": {"enum": [false]}
			},
			"required": [
				"account",
				"sessionActors",
				"hubs",
				"roles",
				"spaces",
				"directories",
				"assignments",
				"policies",
				"actors"
			],
			"additionalProperties": false
		},
		"ClientActor": {
			"$id": "/schemas/ClientActor",
			"description": "\n\t\tThe union of Actor subsets a user sees on their client,\n\t\tincluding the user's AccountActors and all other hub actors as PublicActors.\n\t",
			"anyOf": [{"$ref": "/schemas/AccountActor"}, {"$ref": "/schemas/PublicActor"}]
		},
		"ClientGuestSession": {
			"$id": "/schemas/ClientGuestSession",
			"type": "object",
			"description": "\n\t\tA type of ClientSession. Loaded for un-authenticated users, it simply indicates a user is a guest to the client.\n\t",
			"properties": {"guest": {"enum": [true]}},
			"required": ["guest"],
			"additionalProperties": false
		},
		"ClientSession": {
			"$id": "/schemas/ClientSession",
			"description": "\n\t\tThe session data loaded on each page for authenticated and unauthenticated users.\n\t",
			"anyOf": [{"$ref": "/schemas/ClientAccountSession"}, {"$ref": "/schemas/ClientGuestSession"}]
		},
		"CommunityActor": {
			"$id": "/schemas/CommunityActor",
			"type": "object",
			"description": "\n\t\tRepresents a collective actor under the ownership of a Hub. \n\t\tCurrently, these are only created when a new Hub is made and have no extended functionality within the system.\n\t\tThe Hub that owns it is represented by 'hub_id'.\n\t",
			"properties": {
				"actor_id": {"$ref": "/schemas/ActorId"},
				"account_id": {"type": "null"},
				"hub_id": {"$ref": "/schemas/HubId"},
				"type": {"type": "string", "enum": ["community"]},
				"name": {"type": "string"},
				"icon": {"type": "string"},
				"created": {"type": "object", "instanceof": "Date"},
				"updated": {"anyOf": [{"type": "object", "instanceof": "Date"}, {"type": "null"}]}
			},
			"required": ["actor_id", "hub_id", "type", "name", "created", "updated"],
			"additionalProperties": false
		},
		"CreateAccountActorParams": {
			"$id": "/schemas/CreateAccountActorParams",
			"type": "object",
			"properties": {"name": {"type": "string"}},
			"required": ["name"],
			"additionalProperties": false
		},
		"CreateAccountActorResponse": {
			"$id": "/schemas/CreateAccountActorResponse",
			"type": "object",
			"properties": {
				"actors": {"type": "array", "items": {"$ref": "/schemas/ClientActor"}},
				"hubs": {"type": "array", "items": {"$ref": "/schemas/Hub"}},
				"roles": {"type": "array", "items": {"$ref": "/schemas/Role"}},
				"policies": {"type": "array", "items": {"$ref": "/schemas/Policy"}},
				"spaces": {"type": "array", "items": {"$ref": "/schemas/Space"}},
				"directories": {
					"type": "array",
					"items": {
						"$ref": "/schemas/Entity",
						"tsType": "Directory",
						"tsImport": "import type {Directory} from '$lib/vocab/entity/entityData';"
					}
				},
				"assignments": {"type": "array", "items": {"$ref": "/schemas/Assignment"}}
			},
			"required": ["actors", "hubs", "roles", "policies", "spaces", "directories", "assignments"],
			"additionalProperties": false
		},
		"CreateAssignmentParams": {
			"$id": "/schemas/CreateAssignmentParams",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/ActorId"},
				"actor_id": {"$ref": "/schemas/ActorId"},
				"hub_id": {"$ref": "/schemas/HubId"},
				"role_id": {"$ref": "/schemas/RoleId"}
			},
			"required": ["actor", "actor_id", "hub_id", "role_id"],
			"additionalProperties": false
		},
		"CreateAssignmentResponse": {
			"$id": "/schemas/CreateAssignmentResponse",
			"type": "object",
			"properties": {"assignment": {"$ref": "/schemas/Assignment"}},
			"required": ["assignment"],
			"additionalProperties": false
		},
		"CreateEntityParams": {
			"$id": "/schemas/CreateEntityParams",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/ActorId"},
				"space_id": {"$ref": "/schemas/SpaceId"},
				"path": {"anyOf": [{"type": "string"}, {"type": "null"}]},
				"data": {
					"type": "object",
					"tsType": "EntityData",
					"tsImport": "import type {EntityData} from '$lib/vocab/entity/entityData'"
				},
				"ties": {
					"type": "array",
					"items": {
						"anyOf": [
							{
								"type": "object",
								"properties": {
									"source_id": {"$ref": "/schemas/EntityId"},
									"type": {"type": "string"}
								},
								"required": ["source_id"],
								"additionalProperties": false
							},
							{
								"type": "object",
								"properties": {
									"dest_id": {"$ref": "/schemas/EntityId"},
									"type": {"type": "string"}
								},
								"required": ["dest_id"],
								"additionalProperties": false
							}
						]
					}
				}
			},
			"required": ["actor", "space_id", "data"],
			"additionalProperties": false
		},
		"CreateEntityResponse": {
			"$id": "/schemas/CreateEntityResponse",
			"type": "object",
			"properties": {
				"entities": {"type": "array", "items": {"$ref": "/schemas/Entity"}},
				"ties": {"type": "array", "items": {"$ref": "/schemas/Tie"}}
			},
			"required": ["entities", "ties"],
			"additionalProperties": false
		},
		"CreateHubParams": {
			"$id": "/schemas/CreateHubParams",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/ActorId"},
				"template": {"type": "object", "tsType": "HubTemplate"}
			},
			"required": ["actor", "template"],
			"additionalProperties": false
		},
		"CreateHubResponse": {
			"$id": "/schemas/CreateHubResponse",
			"type": "object",
			"properties": {
				"hub": {"$ref": "/schemas/Hub"},
				"roles": {"type": "array", "items": {"$ref": "/schemas/Role"}},
				"spaces": {"type": "array", "items": {"$ref": "/schemas/Space"}},
				"directories": {
					"type": "array",
					"items": {
						"$ref": "/schemas/Entity",
						"tsType": "Directory",
						"tsImport": "import type {Directory} from '$lib/vocab/entity/entityData';"
					}
				},
				"assignments": {"type": "array", "items": {"$ref": "/schemas/Assignment"}},
				"policies": {"type": "array", "items": {"$ref": "/schemas/Policy"}},
				"actors": {"type": "array", "items": {"$ref": "/schemas/PublicActor"}}
			},
			"required": ["hub", "roles", "policies", "spaces", "directories", "assignments", "actors"],
			"additionalProperties": false
		},
		"CreatePolicyParams": {
			"$id": "/schemas/CreatePolicyParams",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/ActorId"},
				"role_id": {"$ref": "/schemas/RoleId"},
				"permission": {"type": "string"}
			},
			"required": ["actor", "role_id", "permission"],
			"additionalProperties": false
		},
		"CreatePolicyResponse": {
			"$id": "/schemas/CreatePolicyResponse",
			"type": "object",
			"properties": {"policy": {"$ref": "/schemas/Policy"}},
			"required": ["policy"],
			"additionalProperties": false
		},
		"CreateRoleParams": {
			"$id": "/schemas/CreateRoleParams",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/ActorId"},
				"hub_id": {"$ref": "/schemas/HubId"},
				"name": {"type": "string"}
			},
			"required": ["actor", "hub_id", "name"],
			"additionalProperties": false
		},
		"CreateRoleResponse": {
			"$id": "/schemas/CreateRoleResponse",
			"type": "object",
			"properties": {"role": {"$ref": "/schemas/Role"}},
			"required": ["role"],
			"additionalProperties": false
		},
		"CreateSpaceParams": {
			"$id": "/schemas/CreateSpaceParams",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/ActorId"},
				"hub_id": {"$ref": "/schemas/HubId"},
				"name": {"type": "string"},
				"path": {"type": "string"},
				"icon": {"type": "string"},
				"view": {"type": "string"}
			},
			"required": ["actor", "hub_id", "name", "path", "icon", "view"],
			"additionalProperties": false
		},
		"CreateSpaceResponse": {
			"$id": "/schemas/CreateSpaceResponse",
			"type": "object",
			"properties": {
				"space": {"$ref": "/schemas/Space"},
				"directory": {
					"$ref": "/schemas/Entity",
					"tsType": "Directory",
					"tsImport": "import type {Directory} from '$lib/vocab/entity/entityData';"
				}
			},
			"required": ["space", "directory"],
			"additionalProperties": false
		},
		"DeleteActorParams": {
			"$id": "/schemas/DeleteActorParams",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/ActorId"},
				"actor_id": {"$ref": "/schemas/ActorId"}
			},
			"required": ["actor", "actor_id"],
			"additionalProperties": false
		},
		"DeleteActorResponse": {"$id": "/schemas/DeleteActorResponse", "type": "null"},
		"DeleteAssignmentParams": {
			"$id": "/schemas/DeleteAssignmentParams",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/ActorId"},
				"assignment_id": {"$ref": "/schemas/AssignmentId"}
			},
			"required": ["actor", "assignment_id"],
			"additionalProperties": false
		},
		"DeleteAssignmentResponse": {"$id": "/schemas/DeleteAssignmentResponse", "type": "null"},
		"DeleteEntitiesParams": {
			"$id": "/schemas/DeleteEntitiesParams",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/ActorId"},
				"entityIds": {"type": "array", "items": {"$ref": "/schemas/EntityId"}}
			},
			"required": ["actor", "entityIds"],
			"additionalProperties": false
		},
		"DeleteEntitiesResponse": {
			"$id": "/schemas/DeleteEntitiesResponse",
			"type": "object",
			"properties": {
				"entities": {"type": "array", "items": {"$ref": "/schemas/Entity"}},
				"deleted": {"type": "array", "items": {"$ref": "/schemas/EntityId"}}
			},
			"required": ["entities", "deleted"],
			"additionalProperties": false
		},
		"DeleteHubParams": {
			"$id": "/schemas/DeleteHubParams",
			"type": "object",
			"properties": {"actor": {"$ref": "/schemas/ActorId"}, "hub_id": {"$ref": "/schemas/HubId"}},
			"required": ["actor", "hub_id"],
			"additionalProperties": false
		},
		"DeleteHubResponse": {"$id": "/schemas/DeleteHubResponse", "type": "null"},
		"DeletePolicyParams": {
			"$id": "/schemas/DeletePolicyParams",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/ActorId"},
				"policy_id": {"$ref": "/schemas/PolicyId"}
			},
			"required": ["actor", "policy_id"],
			"additionalProperties": false
		},
		"DeletePolicyResponse": {"$id": "/schemas/DeletePolicyResponse", "type": "null"},
		"DeleteRoleParams": {
			"$id": "/schemas/DeleteRoleParams",
			"type": "object",
			"properties": {"actor": {"$ref": "/schemas/ActorId"}, "role_id": {"$ref": "/schemas/RoleId"}},
			"required": ["actor", "role_id"],
			"additionalProperties": false
		},
		"DeleteRoleResponse": {"$id": "/schemas/DeleteRoleResponse", "type": "null"},
		"DeleteSpaceParams": {
			"$id": "/schemas/DeleteSpaceParams",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/ActorId"},
				"space_id": {"$ref": "/schemas/SpaceId"}
			},
			"required": ["actor", "space_id"],
			"additionalProperties": false
		},
		"DeleteSpaceResponse": {"$id": "/schemas/DeleteSpaceResponse", "type": "null"},
		"Entity": {
			"$id": "/schemas/Entity",
			"type": "object",
			"description": "\n\t\tAn Entity is the core data type that represents an ActivityStreams object in the system.\n\t\tEach has an \"owning\" space and actor that controls its governance.\n\t\tEntities exist within a graph architecture, with Ties serving as the paths between nodes.\n\t\tConventionally, all entities within a given Space can be found by traversing\n\t\tthe graph starting at the directory Entity associated with the owning Space.\n\t\tA directory is an ActivityStreams Collection referenced by each Space.\n\t",
			"properties": {
				"entity_id": {"$ref": "/schemas/EntityId"},
				"actor_id": {"$ref": "/schemas/ActorId"},
				"space_id": {"$ref": "/schemas/SpaceId"},
				"path": {"anyOf": [{"type": "string"}, {"type": "null"}]},
				"data": {
					"type": "object",
					"tsType": "EntityData",
					"tsImport": "import type {EntityData} from '$lib/vocab/entity/entityData'"
				},
				"created": {"type": "object", "instanceof": "Date"},
				"updated": {"anyOf": [{"type": "object", "instanceof": "Date"}, {"type": "null"}]}
			},
			"required": ["entity_id", "actor_id", "space_id", "path", "data", "created", "updated"],
			"additionalProperties": false
		},
		"EntityId": {
			"$id": "/schemas/EntityId",
			"type": "number",
			"tsType": "Flavored<number, 'EntityId'>",
			"tsImport": "import {Flavored} from '@feltjs/util';"
		},
		"EphemeraParams": {
			"$id": "/schemas/EphemeraParams",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/ActorId"},
				"space_id": {"$ref": "/schemas/SpaceId"},
				"data": {"type": "object", "properties": {"type": {"type": "string"}}, "required": ["type"]}
			},
			"required": ["actor", "space_id", "data"],
			"additionalProperties": false
		},
		"EphemeraResponse": {
			"$id": "/schemas/EphemeraResponse",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/ActorId"},
				"space_id": {"$ref": "/schemas/SpaceId"},
				"data": {"type": "object", "properties": {"type": {"type": "string"}}, "required": ["type"]}
			},
			"required": ["actor", "space_id", "data"],
			"additionalProperties": false
		},
		"EraseEntitiesParams": {
			"$id": "/schemas/EraseEntitiesParams",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/ActorId"},
				"entityIds": {"type": "array", "items": {"$ref": "/schemas/EntityId"}}
			},
			"required": ["actor", "entityIds"],
			"additionalProperties": false
		},
		"EraseEntitiesResponse": {
			"$id": "/schemas/EraseEntitiesResponse",
			"type": "object",
			"properties": {"entities": {"type": "array", "items": {"$ref": "/schemas/Entity"}}},
			"required": ["entities"],
			"additionalProperties": false
		},
		"GhostActor": {
			"$id": "/schemas/GhostActor",
			"type": "object",
			"description": "\n\t A special system-level Actor that is a placeholder for deleted or otherwise unavailable Actors.\t \n\t",
			"properties": {
				"actor_id": {"$ref": "/schemas/ActorId"},
				"account_id": {"type": "null"},
				"hub_id": {"type": "null"},
				"type": {"type": "string", "enum": ["ghost"]},
				"name": {"type": "string"},
				"icon": {"type": "string"},
				"created": {"type": "object", "instanceof": "Date"},
				"updated": {"anyOf": [{"type": "object", "instanceof": "Date"}, {"type": "null"}]}
			},
			"required": ["actor_id", "type", "name", "created", "updated"],
			"additionalProperties": false
		},
		"Hub": {
			"$id": "/schemas/Hub",
			"type": "object",
			"description": "\n\t\tHubs represent the membrane around the places Actors can interact with each other or with system level data.\n\t\tThey have self contained governance and ownership of Spaces within them.\n\t\tBy default they are hidden & undiscoverable and are only visible to a user once an Actor has been invited in.\n\t",
			"properties": {
				"hub_id": {"$ref": "/schemas/HubId"},
				"type": {"type": "string", "enum": ["community", "personal"]},
				"name": {"type": "string"},
				"settings": {"$ref": "/schemas/HubSettings"},
				"created": {"type": "object", "instanceof": "Date"},
				"updated": {"anyOf": [{"type": "object", "instanceof": "Date"}, {"type": "null"}]}
			},
			"required": ["hub_id", "type", "name", "settings", "created", "updated"],
			"additionalProperties": false
		},
		"HubId": {
			"$id": "/schemas/HubId",
			"type": "number",
			"tsType": "Flavored<number, 'HubId'>",
			"tsImport": "import {Flavored} from '@feltjs/util';"
		},
		"HubSettings": {
			"$id": "/schemas/HubSettings",
			"type": "object",
			"description": "\n\t\tA nested set of attributes on Hub. Holds all hub level settings.\n\t",
			"properties": {
				"hue": {"type": "number"},
				"defaultRoleId": {"$ref": "/schemas/RoleId"},
				"instance": {
					"type": "object",
					"properties": {
						"allowedAccountNames": {"type": "array", "items": {"type": "string"}},
						"disableCreateHub": {"type": "boolean"},
						"defaultHubIds": {"type": "array", "items": {"$ref": "/schemas/HubId"}}
					},
					"additionalProperties": false
				}
			},
			"required": ["hue", "defaultRoleId"],
			"additionalProperties": false
		},
		"InitialHubSettings": {
			"$id": "/schemas/InitialHubSettings",
			"type": "object",
			"description": "\n\t\tA subset of HubSettings needed for defaults at the time of Hub creation.\n\t",
			"properties": {"hue": {"type": "number"}},
			"required": ["hue"],
			"additionalProperties": false
		},
		"InviteToHubParams": {
			"$id": "/schemas/InviteToHubParams",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/ActorId"},
				"hub_id": {"$ref": "/schemas/HubId"},
				"name": {"type": "string"}
			},
			"required": ["actor", "hub_id", "name"],
			"additionalProperties": false
		},
		"InviteToHubResponse": {
			"$id": "/schemas/InviteToHubResponse",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/PublicActor"},
				"assignment": {"$ref": "/schemas/Assignment"}
			},
			"required": ["actor", "assignment"],
			"additionalProperties": false
		},
		"KickFromHubParams": {
			"$id": "/schemas/KickFromHubParams",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/ActorId"},
				"actor_id": {"$ref": "/schemas/ActorId"},
				"hub_id": {"$ref": "/schemas/HubId"}
			},
			"required": ["actor", "actor_id", "hub_id"],
			"additionalProperties": false
		},
		"KickFromHubResponse": {"$id": "/schemas/KickFromHubResponse", "type": "null"},
		"LeaveHubParams": {
			"$id": "/schemas/LeaveHubParams",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/ActorId"},
				"actor_id": {"$ref": "/schemas/ActorId"},
				"hub_id": {"$ref": "/schemas/HubId"}
			},
			"required": ["actor", "actor_id", "hub_id"],
			"additionalProperties": false
		},
		"LeaveHubResponse": {"$id": "/schemas/LeaveHubResponse", "type": "null"},
		"OpenDialogParams": {
			"$id": "/schemas/OpenDialogParams",
			"type": "object",
			"tsType": "DialogData",
			"tsImport": "import type {DialogData} from \"@feltjs/felt-ui\""
		},
		"PingParams": {"$id": "/schemas/PingParams", "type": "null"},
		"PingResponse": {"$id": "/schemas/PingResponse", "type": "null"},
		"Policy": {
			"$id": "/schemas/Policy",
			"type": "object",
			"description": "\n\t\tPolicies are associated with Roles to describe the system Actions a Role is able to take in the system.\n\t\tPermissions are the enumeration of the those Actions and are often 1:1.\n\t\t`data` is a currently-unused attribute earmarked for allowing for more complicated governance schemes.\n\t",
			"properties": {
				"policy_id": {"$ref": "/schemas/PolicyId"},
				"role_id": {"$ref": "/schemas/RoleId"},
				"permission": {"type": "string"},
				"data": {"anyOf": [{"type": "object"}, {"type": "null"}]},
				"created": {"type": "object", "instanceof": "Date"},
				"updated": {"anyOf": [{"type": "object", "instanceof": "Date"}, {"type": "null"}]}
			},
			"required": ["policy_id", "role_id", "permission", "data", "created", "updated"],
			"additionalProperties": false
		},
		"PolicyId": {
			"$id": "/schemas/PolicyId",
			"type": "number",
			"tsType": "Flavored<number, 'PolicyId'>",
			"tsImport": "import {Flavored} from '@feltjs/util';"
		},
		"PublicActor": {
			"$id": "/schemas/PublicActor",
			"type": "object",
			"description": "\n\t\tA subset of an Actor available to all clients in a hub.\n\t",
			"properties": {
				"actor_id": {"$ref": "/schemas/ActorId"},
				"type": {"type": "string", "enum": ["account", "community", "ghost"]},
				"name": {"type": "string"},
				"icon": {"type": "string"},
				"created": {"type": "object", "instanceof": "Date"}
			},
			"required": ["actor_id", "type", "name", "created"],
			"additionalProperties": false
		},
		"QueryEntitiesResponse": {
			"$id": "/schemas/QueryEntitiesResponse",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/ActorId"},
				"source_id": {"$ref": "/schemas/EntityId"}
			},
			"required": ["actor", "source_id"],
			"additionalProperties": false
		},
		"ReadEntitiesByIdParams": {
			"$id": "/schemas/ReadEntitiesByIdParams",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/ActorId"},
				"entityIds": {"type": "array", "items": {"$ref": "/schemas/EntityId"}}
			},
			"required": ["actor", "entityIds"],
			"additionalProperties": false
		},
		"ReadEntitiesByIdResponse": {
			"$id": "/schemas/ReadEntitiesByIdResponse",
			"type": "object",
			"properties": {"entities": {"type": "array", "items": {"$ref": "/schemas/Entity"}}},
			"required": ["entities"],
			"additionalProperties": false
		},
		"ReadEntitiesPaginatedParams": {
			"$id": "/schemas/ReadEntitiesPaginatedParams",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/ActorId"},
				"source_id": {"$ref": "/schemas/EntityId"},
				"pageSize": {"type": "number", "maximum": 20},
				"pageKey": {"type": "number"},
				"related": {"type": "string", "enum": ["source", "dest", "both"]}
			},
			"required": ["actor", "source_id"],
			"additionalProperties": false
		},
		"ReadEntitiesPaginatedResponse": {
			"$id": "/schemas/ReadEntitiesPaginatedResponse",
			"type": "object",
			"properties": {
				"entities": {"type": "array", "items": {"$ref": "/schemas/Entity"}},
				"ties": {"type": "array", "items": {"$ref": "/schemas/Tie"}}
			},
			"required": ["entities", "ties"],
			"additionalProperties": false
		},
		"ReadEntitiesParams": {
			"$id": "/schemas/ReadEntitiesParams",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/ActorId"},
				"source_id": {"$ref": "/schemas/EntityId"}
			},
			"required": ["actor", "source_id"],
			"additionalProperties": false
		},
		"ReadEntitiesResponse": {
			"$id": "/schemas/ReadEntitiesResponse",
			"type": "object",
			"properties": {
				"entities": {"type": "array", "items": {"$ref": "/schemas/Entity"}},
				"ties": {"type": "array", "items": {"$ref": "/schemas/Tie"}}
			},
			"required": ["entities", "ties"],
			"additionalProperties": false
		},
		"ReadHubParams": {
			"$id": "/schemas/ReadHubParams",
			"type": "object",
			"properties": {"actor": {"$ref": "/schemas/ActorId"}, "hub_id": {"$ref": "/schemas/HubId"}},
			"required": ["actor", "hub_id"],
			"additionalProperties": false
		},
		"ReadHubResponse": {
			"$id": "/schemas/ReadHubResponse",
			"type": "object",
			"properties": {
				"hub": {"$ref": "/schemas/Hub"},
				"spaces": {"type": "array", "items": {"$ref": "/schemas/Space"}},
				"directories": {
					"type": "array",
					"items": {
						"$ref": "/schemas/Entity",
						"tsType": "Directory",
						"tsImport": "import type {Directory} from '$lib/vocab/entity/entityData';"
					}
				},
				"roles": {"type": "array", "items": {"$ref": "/schemas/Role"}},
				"assignments": {"type": "array", "items": {"$ref": "/schemas/Assignment"}},
				"actors": {"type": "array", "items": {"$ref": "/schemas/PublicActor"}}
			},
			"required": ["hub", "spaces", "directories", "roles", "assignments", "actors"],
			"additionalProperties": false
		},
		"ReadPoliciesParams": {
			"$id": "/schemas/ReadPoliciesParams",
			"type": "object",
			"properties": {"actor": {"$ref": "/schemas/ActorId"}, "role_id": {"$ref": "/schemas/RoleId"}},
			"required": ["actor", "role_id"],
			"additionalProperties": false
		},
		"ReadPoliciesResponse": {
			"$id": "/schemas/ReadPoliciesResponse",
			"type": "object",
			"properties": {"policies": {"type": "array", "items": {"$ref": "/schemas/Policy"}}},
			"required": ["policies"],
			"additionalProperties": false
		},
		"ReadRolesParams": {
			"$id": "/schemas/ReadRolesParams",
			"type": "object",
			"properties": {"actor": {"$ref": "/schemas/ActorId"}, "hub_id": {"$ref": "/schemas/HubId"}},
			"required": ["actor", "hub_id"],
			"additionalProperties": false
		},
		"ReadRolesResponse": {
			"$id": "/schemas/ReadRolesResponse",
			"type": "object",
			"properties": {"roles": {"type": "array", "items": {"$ref": "/schemas/Role"}}},
			"required": ["roles"],
			"additionalProperties": false
		},
		"ReadSpacesParams": {
			"$id": "/schemas/ReadSpacesParams",
			"type": "object",
			"properties": {"actor": {"$ref": "/schemas/ActorId"}, "hub_id": {"$ref": "/schemas/HubId"}},
			"required": ["actor", "hub_id"],
			"additionalProperties": false
		},
		"ReadSpacesResponse": {
			"$id": "/schemas/ReadSpacesResponse",
			"type": "object",
			"properties": {
				"spaces": {"type": "array", "items": {"$ref": "/schemas/Space"}},
				"directories": {
					"type": "array",
					"items": {
						"$ref": "/schemas/Entity",
						"tsType": "Directory",
						"tsImport": "import type {Directory} from '$lib/vocab/entity/entityData';"
					}
				}
			},
			"required": ["spaces", "directories"],
			"additionalProperties": false
		},
		"Role": {
			"$id": "/schemas/Role",
			"type": "object",
			"description": "\n\t\tRoles are user-defined governance objects that exist within the context of a single Hub.\n\t\tThey have Policies associated with them that allow for actions to be taken within the system.\n\t\tWhen an Actor has a Role via an Assignment, that actor may take any action allowed by the Role's Policies.\n\t",
			"properties": {
				"role_id": {"$ref": "/schemas/RoleId"},
				"hub_id": {"$ref": "/schemas/HubId"},
				"name": {"type": "string"},
				"created": {"type": "object", "instanceof": "Date"},
				"updated": {"anyOf": [{"type": "object", "instanceof": "Date"}, {"type": "null"}]}
			},
			"required": ["role_id", "hub_id", "name", "created", "updated"],
			"additionalProperties": false
		},
		"RoleId": {
			"$id": "/schemas/RoleId",
			"type": "number",
			"tsType": "Flavored<number, 'RoleId'>",
			"tsImport": "import {Flavored} from '@feltjs/util';"
		},
		"SetMobileParams": {"$id": "/schemas/SetMobileParams", "type": "boolean"},
		"SetSessionParams": {
			"$id": "/schemas/SetSessionParams",
			"type": "object",
			"properties": {"session": {"$ref": "/schemas/ClientSession"}},
			"required": ["session"],
			"additionalProperties": false
		},
		"SignInParams": {
			"$id": "/schemas/SignInParams",
			"type": "object",
			"properties": {"username": {"type": "string"}, "password": {"type": "string"}},
			"required": ["username", "password"],
			"additionalProperties": false
		},
		"SignInResponse": {
			"$id": "/schemas/SignInResponse",
			"type": "object",
			"properties": {"session": {"$ref": "/schemas/ClientAccountSession"}},
			"required": ["session"],
			"additionalProperties": false
		},
		"SignOutParams": {"$id": "/schemas/SignOutParams", "type": "null"},
		"SignOutResponse": {"$id": "/schemas/SignOutResponse", "type": "null"},
		"SignUpParams": {
			"$id": "/schemas/SignUpParams",
			"type": "object",
			"properties": {"username": {"type": "string"}, "password": {"type": "string"}},
			"required": ["username", "password"],
			"additionalProperties": false
		},
		"SignUpResponse": {
			"$id": "/schemas/SignUpResponse",
			"type": "object",
			"properties": {"session": {"$ref": "/schemas/ClientAccountSession"}},
			"required": ["session"],
			"additionalProperties": false
		},
		"Space": {
			"$id": "/schemas/Space",
			"type": "object",
			"description": "\n\t Spaces are subdivisions within a Hub that hold a View and reference to an Entity directory.\n\t The View is used to interpret, visualize, and manipulate the Entities connected to the directory.\n\t Each is a Svelte component that conforms to the View interface.\n ",
			"properties": {
				"space_id": {"$ref": "/schemas/SpaceId"},
				"name": {"type": "string"},
				"icon": {"type": "string"},
				"view": {"type": "string"},
				"created": {"type": "object", "instanceof": "Date"},
				"updated": {"anyOf": [{"type": "object", "instanceof": "Date"}, {"type": "null"}]},
				"hub_id": {"$ref": "/schemas/HubId"},
				"directory_id": {"$ref": "/schemas/EntityId"}
			},
			"required": [
				"space_id",
				"name",
				"icon",
				"view",
				"created",
				"updated",
				"hub_id",
				"directory_id"
			],
			"additionalProperties": false
		},
		"SpaceId": {
			"$id": "/schemas/SpaceId",
			"type": "number",
			"tsType": "Flavored<number, 'SpaceId'>",
			"tsImport": "import {Flavored} from '@feltjs/util';"
		},
		"Tie": {
			"$id": "/schemas/Tie",
			"type": "object",
			"description": "\n\t\tTies are part of the Entity/Tie graph data system.\n\t\tEach represents a named, directional relationship between two entities.\n\t\tA Tie specifies \"the [source] has relationship of [type] with [dest].\"\n\t",
			"properties": {
				"tie_id": {"$ref": "/schemas/TieId"},
				"source_id": {"$ref": "/schemas/EntityId"},
				"dest_id": {"$ref": "/schemas/EntityId"},
				"type": {"type": "string"},
				"created": {"type": "object", "instanceof": "Date"}
			},
			"required": ["tie_id", "source_id", "dest_id", "type", "created"],
			"additionalProperties": false
		},
		"TieId": {
			"$id": "/schemas/TieId",
			"type": "number",
			"tsType": "Flavored<number, 'TieId'>",
			"tsImport": "import {Flavored} from '@feltjs/util';"
		},
		"UpdateAccountPasswordParams": {
			"$id": "/schemas/UpdateAccountPasswordParams",
			"type": "object",
			"properties": {"oldPassword": {"type": "string"}, "newPassword": {"type": "string"}},
			"required": ["oldPassword", "newPassword"],
			"additionalProperties": false
		},
		"UpdateAccountPasswordResponse": {
			"$id": "/schemas/UpdateAccountPasswordResponse",
			"$ref": "/schemas/ClientAccount"
		},
		"UpdateAccountSettingsParams": {
			"$id": "/schemas/UpdateAccountSettingsParams",
			"type": "object",
			"properties": {"settings": {"$ref": "/schemas/AccountSettings"}},
			"required": ["settings"],
			"additionalProperties": false
		},
		"UpdateAccountSettingsResponse": {
			"$id": "/schemas/UpdateAccountSettingsResponse",
			"$ref": "/schemas/ClientAccount"
		},
		"UpdateEntitiesParams": {
			"$id": "/schemas/UpdateEntitiesParams",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/ActorId"},
				"entities": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"entity_id": {"$ref": "/schemas/EntityId"},
							"data": {
								"type": "object",
								"tsType": "EntityData",
								"tsImport": "import type {EntityData} from '$lib/vocab/entity/entityData'"
							},
							"path": {"anyOf": [{"type": "string"}, {"type": "null"}]}
						},
						"required": ["entity_id"],
						"additionalProperties": false
					}
				}
			},
			"required": ["actor", "entities"],
			"additionalProperties": false
		},
		"UpdateEntitiesResponse": {
			"$id": "/schemas/UpdateEntitiesResponse",
			"type": "object",
			"properties": {"entities": {"type": "array", "items": {"$ref": "/schemas/Entity"}}},
			"required": ["entities"],
			"additionalProperties": false
		},
		"UpdateHubSettingsParams": {
			"$id": "/schemas/UpdateHubSettingsParams",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/ActorId"},
				"hub_id": {"$ref": "/schemas/HubId"},
				"settings": {"$ref": "/schemas/HubSettings"}
			},
			"required": ["actor", "hub_id", "settings"],
			"additionalProperties": false
		},
		"UpdateHubSettingsResponse": {"$id": "/schemas/UpdateHubSettingsResponse", "type": "null"},
		"UpdatePolicyParams": {
			"$id": "/schemas/UpdatePolicyParams",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/ActorId"},
				"policy_id": {"$ref": "/schemas/PolicyId"},
				"data": {"anyOf": [{"type": "object"}, {"type": "null"}]}
			},
			"required": ["actor", "policy_id", "data"],
			"additionalProperties": false
		},
		"UpdatePolicyResponse": {
			"$id": "/schemas/UpdatePolicyResponse",
			"type": "object",
			"properties": {"policy": {"$ref": "/schemas/Policy"}},
			"required": ["policy"],
			"additionalProperties": false
		},
		"UpdateRoleParams": {
			"$id": "/schemas/UpdateRoleParams",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/ActorId"},
				"role_id": {"$ref": "/schemas/RoleId"},
				"name": {"type": "string"}
			},
			"required": ["actor", "role_id", "name"],
			"additionalProperties": false
		},
		"UpdateRoleResponse": {
			"$id": "/schemas/UpdateRoleResponse",
			"type": "object",
			"properties": {"role": {"$ref": "/schemas/Role"}},
			"required": ["role"],
			"additionalProperties": false
		},
		"UpdateSpaceParams": {
			"$id": "/schemas/UpdateSpaceParams",
			"type": "object",
			"properties": {
				"actor": {"$ref": "/schemas/ActorId"},
				"space_id": {"$ref": "/schemas/SpaceId"},
				"name": {"type": "string"},
				"path": {"type": "string"},
				"icon": {"type": "string"},
				"view": {"type": "string"}
			},
			"required": ["actor", "space_id"],
			"additionalProperties": false
		},
		"UpdateSpaceResponse": {
			"$id": "/schemas/UpdateSpaceResponse",
			"type": "object",
			"properties": {"space": {"$ref": "/schemas/Space"}},
			"required": ["space"],
			"additionalProperties": false
		},
		"ViewSpaceParams": {
			"$id": "/schemas/ViewSpaceParams",
			"type": "object",
			"properties": {
				"space_id": {"$ref": "/schemas/SpaceId"},
				"view": {"type": ["string", "null"]}
			},
			"required": ["space_id", "view"],
			"additionalProperties": false
		}
	}
}
