// generated by src/lib/vocab/account/account.schema.ts

import type {EntityData} from '$lib/vocab/entity/entityData';
import type {AccountPersona, ClientPersona} from '$lib/vocab/persona/persona';
import type {Community} from '$lib/vocab/community/community';
import type {Entity} from '$lib/vocab/entity/entity';
import type {Role} from '$lib/vocab/role/role';
import type {Space} from '$lib/vocab/space/space';
import type {Assignment} from '$lib/vocab/assignment/assignment';
import type {Policy} from '$lib/vocab/policy/policy';

/**
 *
 * 		Represents the point of entry to the system and is responsible for managing authentication to the system.
 * 		It holds top level user data and is the relation through which all other data is loaded for the client.
 *
 */
export interface Account {
	account_id: number;
	name: string;
	password: string;
	/**
	 *
	 * 		A nested set of attributes on Account & ClientAccount. Holds all account level settings.
	 *
	 */
	settings: AccountSettings;
	created: Date;
	updated: Date | null;
}
/**
 *
 * 		A nested set of attributes on Account & ClientAccount. Holds all account level settings.
 *
 */
export interface AccountSettings {
	darkmode?: boolean;
}
/**
 *
 * 		A client-facing subset of an Account. Excludes 'password' for security.
 *
 */
export interface ClientAccount {
	account_id: number;
	name: string;
	/**
	 *
	 * 		A nested set of attributes on Account & ClientAccount. Holds all account level settings.
	 *
	 */
	settings: AccountSettings;
	created: Date;
	updated: Date | null;
}
/**
 *
 * 		The session data loaded on each page for authenticated users.
 *
 */
export interface ClientAccountSession {
	/**
	 *
	 * 		A client-facing subset of an Account. Excludes 'password' for security.
	 *
	 */
	account: ClientAccount;
	sessionPersonas: AccountPersona[];
	communities: Community[];
	roles: Role[];
	spaces: Space[];
	directories: Array<Entity & {data: EntityData}>;
	assignments: Assignment[];
	policies: Policy[];
	personas: ClientPersona[];
	guest?: false;
}
/**
 *
 * 		A type of ClientSession. Loaded for un-authenticated users, it simply indicates a user is a guest to the client.
 *
 */
export interface ClientGuestSession {
	guest: true;
}
/**
 *
 * 		The session data loaded on each page for authenticated and unauthenticated users.
 *
 */
export type ClientSession = ClientAccountSession | ClientGuestSession;

// generated by src/lib/vocab/account/account.schema.ts
