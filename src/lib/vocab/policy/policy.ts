// generated by src/lib/vocab/policy/policy.schema.ts

import type {Flavored} from '@feltjs/util';
import type {RoleId} from '$lib/vocab/role/role';
import type {PermissionName} from '$lib/vocab/permission/permission';

export type PolicyId = Flavored<number, 'PolicyId'>;

/**
 * Each <Vocab name="Policy" /> associates a <Vocab name="Role" /> with a permission
 * to describe the Actions that <Vocab name="Actor" />s with the <Vocab name="Role" /> are able to perform.
 * Permissions are often 1:1 with Actions, but they don't have to be.
 * `data` is a stub to support more complex governance schemes in the future.
 */
export interface Policy {
	policy_id: PolicyId;
	role_id: RoleId;
	permission: PermissionName;
	data: {
		[k: string]: unknown;
	} | null;
	created: Date;
	updated: Date | null;
}

// generated by src/lib/vocab/policy/policy.schema.ts
