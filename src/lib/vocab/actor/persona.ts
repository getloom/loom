// generated by src/lib/vocab/actor/persona.schema.ts

/**
 *
 * 		Represents a human actor logged in via an Account. They are owned and managed from the account level.
 * 		When an AccountPersona is created, a personal Hub is also created for it and associated via 'hub_id'.
 * 		A reference to this personal Hub is stored in 'hub_id'.
 *
 */
export interface AccountPersona {
	persona_id: number;
	account_id: number;
	hub_id: number;
	type: 'account';
	name: string;
	icon?: string;
	created: Date;
	updated: Date | null;
}
export type ActorPersona = AccountPersona | CommunityPersona;

/**
 *
 * 		The union of Persona subsets a user sees on their client,
 * 		including the user's AccountPersonas and all other hub actors as PublicPersonas.
 *
 */
export type ClientPersona = AccountPersona | PublicPersona;

/**
 *
 * 		Represents a collective actor under the ownership of a Hub.
 * 		Currently, these are only created when a new Hub is made and have no extended functionality within the system.
 * 		The Hub that owns it is represented by 'hub_id'.
 *
 */
export interface CommunityPersona {
	persona_id: number;
	account_id?: null;
	hub_id: number;
	type: 'community';
	name: string;
	icon?: string;
	created: Date;
	updated: Date | null;
}
/**
 *
 * 	 A special system-level Persona that is a placeholder for deleted or otherwise unavailable Personas.
 *
 */
export interface GhostPersona {
	persona_id: number;
	account_id?: null;
	hub_id?: null;
	type: 'ghost';
	name: string;
	icon?: string;
	created: Date;
	updated: Date | null;
}
/**
 *
 * 	 Personas represent actors in the system. They can be of type Account, Hub, or Ghost.
 *
 */
export type Persona = AccountPersona | CommunityPersona | GhostPersona;

/**
 *
 * 		A subset of a Persona available to all clients in a hub.
 *
 */
export interface PublicPersona {
	persona_id: number;
	type: 'account' | 'community' | 'ghost';
	name: string;
	icon?: string;
	created: Date;
}

// generated by src/lib/vocab/actor/persona.schema.ts
